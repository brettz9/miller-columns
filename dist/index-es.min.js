function index(t){let n;const c="ul",e="li";function a(){return t(".column > .selected")}function i(){const n=t("div.breadcrumb").empty();a().each(function(){const c=t(this);t("<span>").text(c.text().trim()).click(function(){c.click()}).appendTo(n)})}function l(c,e){let i=0;a().not(e).each(function(){i+=t(this).outerWidth(!0)}),c.stop().animate({scrollLeft:i},n.delay)}function s(){t(".column:gt(0)").addClass("collapse")}function o(){return a().last()}function r(){s(),a().removeClass("selected"),i(),n.current(void 0)}function d(){o().next().click()}function u(n){let c=!1;switch(n.which){case 27:r();break;case 38:o().prev().click(),c=!0;break;case 40:d(),c=!0;break;case 37:!function(){const t=o().data("ancestor");t&&t.click()}(),c=!0;break;case 39:!function(){const t=o().data("child");t?t.children(e).first().click():d()}(),c=!0}c&&0===o().length&&t(".column").first().children().first().click(),c&&n.preventDefault()}t.fn.millerColumns=function(a){const o={current:t=>{},breadcrumb:i,animation:l,delay:500};return n=t.extend(o,a),this.each(function(){const a=t(this);!function(n){const a=[];let i;for(a.push(n.children());a.length;)(i=a.shift()).children(e).each(function(e,i){const l=t(this),s=l.children(c),o=l.parent().parent();o.length&&null==l.data("ancestor")&&t(this).siblings().addBack().data("ancestor",o),s.length&&(a.push(s),t(this).data("child",s).addClass("parent")),t(this).parent(c).appendTo(n).addClass("column")})}(a),s(),a.find(e).on("click",function(c){const e=t(this);r();const i=e.data("child");let l=e;for(i&&i.removeClass("collapse").children().removeClass("selected");l;)l.addClass("selected").parent().removeClass("collapse"),l=l.data("ancestor");n.animation.call(this,a,e),n.breadcrumb.call(this),n.current.call(this,e),c.stopPropagation()}),a.on("keydown",u),a.on("click",r)})}}export default index;
